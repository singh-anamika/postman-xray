name: Multi-Job Action

on:
  repository_dispatch:
    types: run_api_automation

jobs:
  api_automation:
    runs-on: ubuntu-latest
    outputs:
      job_status: ${{ steps.set_status.outputs.job_status }}

    steps:
      - uses: actions/checkout@v2

      - name: Install Python Packages
        run: pip install requests

      - name: Export Postman Collection
        run: |
          curl --location --request GET 'https://api.getpostman.com/collections/926bcc97-e8db-4354-ac57-e293cd106587?format=2.1.0' --header 'X-Api-Key: PMAK-641853f432fe401f0c931322-cf6e2ebe1abf1a72f2fe513d70fe7abfb4' --output 'collection.json'
          echo "::set-output name=collection_path::$(pwd)/collection.json"

      - name: Install Newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-junitfull
          npm install -g newman-reporter-junitxray

      - name: Run API tests via Newman
        id: newman
        run: newman run ${{ steps.Export_Postman_Collection.outputs.collection_path }} --reporters cli,junitfull --reporter-junitfull-export cvc-report.xml

      - name: Upload Newman JUnit report
        continue-on-error: true
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: newman-report
          path: cvc-report.xml

      - name: Set job status
        id: set_status
        if: ${{ always() }}
        run: |
          if [ "${{ steps.newman.outcome }}" == "success" ]; then
            echo "::set-output name=job_status::success"
          else
            echo "::set-output name=job_status::failed"
          fi
